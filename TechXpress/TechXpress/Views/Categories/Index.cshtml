@model TechXpress.ViewModels.ALLProductsVm

<!-- SECTION -->
<div class="section">
	<div class="container">
		<div class="row">
			<!-- ASIDE -->
			<div id="aside" class="col-md-3">
				<!-- Price Filter -->
				<div class="aside">
					<h3 class="aside-title">Price</h3>
					<div class="price-filter">
						<div id="price-slider"></div>
						<div class="input-number price-min">
							<input id="price-min" type="number" value="@Model.Min_Price">
							<span class="qty-up">+</span>
							<span class="qty-down">-</span>
						</div>
						<span>-</span>
						<div class="input-number price-max">
							<input id="price-max" type="number" value="@Model.Max_Price">
							<span class="qty-up">+</span>
							<span class="qty-down">-</span>
						</div>
					</div>
				</div>

				<!-- Brand Filter -->
				<div class="aside">
					<h3 class="aside-title">Brand</h3>
					<div class="checkbox-filter">
						@foreach (var brand in Model.Brands)
						{
							<div class="input-checkbox">
								<input type="checkbox" name="SelectedBrands" class="filter-checkbox" value="@brand.Id" id="brand-@brand.Id"
																		@(Model.SelectedBrands.Contains(brand.Id) ? "checked" : "") />
								<label for="brand-@brand.Id">
									<span></span> @brand.Name 
								</label>
							</div>
						}
					</div>
				</div>
				<!-- Top Selling -->
				<div class="aside">
					<h3 class="aside-title">Top selling</h3>
					@for (int i = 0; i < Math.Min(3, Model.TopSellingProducts.Count); i++)
					{
						<div class="product-widget">
							<div class="product-img">
								<img src="~/img/@Model.TopSellingProducts[i].Image" alt="">
							</div>
							<div class="product-body">
								<p class="product-category">@Model.TopSellingProducts[i].Category.Name</p>
								<h3 class="product-name"><a href="#">@Model.TopSellingProducts[i].Name</a></h3>
								@if (Model.TopSellingProducts[i].HasDiscount)
								{
									<h4 class="product-price">$@Model.TopSellingProducts[i].Price <del class="product-old-price">$@Model.TopSellingProducts[i].OldPrice</del></h4>
								}
								else
								{
									<h4 class="product-price">$@Model.TopSellingProducts[i].Price</h4>
								}
							</div>
						</div>
					}
				</div>
			</div>
			<!-- /ASIDE -->
			<!-- STORE -->
			<div id="store" class="col-md-9">
				<!-- Filter controls -->
				<div class="store-filter clearfix">
					<div class="store-sort">
						<label>
							Sort By:
							<select class="input-select" id="sort-select">
								<option value="popular">Popular</option>
								<option value="rating">Rating</option>
							</select>
						</label>
						<label>
							Show:
							<select class="input-select" id="show-select">
								<option value="20">20</option>
								<option value="50">50</option>
							</select>
						</label>
					</div>
				</div>

				<!-- Store Products -->
				<!-- Filtered Products -->
				<div id="filtered-products">
					@await Html.PartialAsync("_FilteredProducts", Model)
				</div>
			</div>
			<!-- /STORE -->
		</div>
	</div>
</div>
<!-- /SECTION -->
@section Scripts {
	<script>
		$(document).ready(function() {
			// Initialize price slider 
			if ($.fn.slider) {
				$("#price-slider").slider({
					range: true,
					min: @Model.Min_Price,
					max: @Model.Max_Price,
					values: [@Model.Min_Price, @Model.Max_Price],
					slide: function(event, ui) {
						$("#price-min").val(ui.values[0]);
						$("#price-max").val(ui.values[1]);
					},
					stop: function(event, ui) {
						applyFilters();
					}
				});
			}

			// Function to collect filter values and make AJAX request
			function applyFilters() {
				var selectedBrands = [];
				$('input[name="SelectedBrands"]:checked').each(function() {
					selectedBrands.push(parseInt($(this).val()));
				});

				var minPrice = $("#price-min").val();
				var maxPrice = $("#price-max").val();

				// Show loading indicator
				$('#filtered-products').html('<div class="text-center p-4"><i class="fa fa-spinner fa-spin"></i> Loading...</div>');

				$.ajax({
					url: '@Url.Action("FilterProducts", "Categories")',
					type: 'POST',
					data: {
						selectedBrands: selectedBrands,
						minPrice: minPrice,
						maxPrice: maxPrice
					},
					success: function(result) {
						$('#filtered-products').html(result);
					},
					error: function(error) {
						console.log('Error applying filters:', error);
						$('#filtered-products').html('<div class="alert alert-danger">Error loading products. Please try again.</div>');
					}
				});
			}

			// Apply filters when any checkbox changes
			$('.filter-checkbox').on('change', applyFilters);

			// Apply filters when price inputs change
			$("#price-min, #price-max").on('change', function() {
				// Update slider if jQuery UI is available
				if ($.fn.slider) {
					$("#price-slider").slider("values", [$("#price-min").val(), $("#price-max").val()]);
				}
				applyFilters();
			});

			// Handle quantity up/down buttons for price inputs
			$(".qty-up").on('click', function() {
				var input = $(this).siblings('input');
				var value = parseInt(input.val()) + 1;
				input.val(value).trigger('change');
			});

			$(".qty-down").on('click', function() {
				var input = $(this).siblings('input');
				var value = parseInt(input.val()) - 1;
				if (value >= 0) {
					input.val(value).trigger('change');
				}
			});
		});
	</script>
}